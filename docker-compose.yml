version: '3.8'

services:
    # backend:
    #     build: ./backend
    #     volumes:
    #       - ./backend/:/flaskApp
    #     ports:
    #       - 5000:5000

    frontend:
        build: ./frontend/
        ports: 
          - "80:3001"
        volumes:
          - './frontend/:/reactApp'
          - '/reactApp/node_modules'
        stdin_open: true
        # tty: true

    db:
      image: postgres:${PG_VERSION}
      ports:
        - "5432:5432"
      environment:
        # env vars specific to postgres image used on first boot
        - POSTGRES_USER=${SUPER_USER}
        - POSTGRES_PASSWORD=${SUPER_USER_PASSWORD}
        - POSTGRES_DB=${DB_NAME}
        # env vars useful for our sql scripts
        - SUPER_USER=${SUPER_USER}
        - SUPER_USER_PASSWORD=${SUPER_USER_PASSWORD}
        - DB_NAME=${DB_NAME}
        - DB_USER=${DB_USER}
        - DB_PASS=${DB_PASS}
        - DB_ANON_ROLE=${DB_ANON_ROLE}
        - DEVELOPMENT=${DEVELOPMENT}
        - JWT_SECRET=${JWT_SECRET}

      volumes:
        - "./postgrest-starter-kit/db/src:/docker-entrypoint-initdb.d"
 
    postgrest:
      image: postgrest/postgrest
      ports:
        - "3000:3000"
      links:
        - db:db
      environment:
        - PGRST_DB_URI=postgres://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}
        - PGRST_DB_SCHEMA=${DB_SCHEMA} 
        - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE}
        - PGRST_DB_POOL=${DB_POOL} 
        - PGRST_JWT_SECRET=${JWT_SECRET}  
        - PGRST_MAX_ROWS=${MAX_ROWS} 
        - PGRST_PRE_REQUEST=${PRE_REQUEST}
        - PGRST_SERVER_PROXY_URI=${SERVER_PROXY_URI}
      depends_on:
        - db
